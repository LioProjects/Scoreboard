@property --angle{
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}
@property --angle2{
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}
@property --size{
    syntax: "<number>";
    initial-value: 1;
    inherits: false;
}

@keyframes spin {
    from{
        --angle: 0deg;
    }
    to{
        --angle: 360deg
    }
}
@keyframes spinAntiClockWise {
    from{
        --angle2: 360deg;
    }
    to{
        --angle2: 0deg
    }
}
@keyframes grow {
    0% {
        --size: 1;
    }
    50%{
        --size: 1.5;
    }
    100%{
        --size: 1;
    }
}

.point-button {
    position: relative;
    height:100%;
    width: 5vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 20px;

}
.point-button.scoring-animation::before,
.point-button.scoring-animation::after {
  content: '';
  position: absolute;
  padding: 5px;
  width: 100%;
  height: 100%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
  border-radius: 20px;
  filter: blur(5px)
}
//360-var
.point-button.scoring-animation::before {
  background-image: conic-gradient(from var(--angle), transparent, transparent, transparent, transparent, transparent, transparent, transparent, blue);
  animation: 1s spin linear infinite;
}

.point-button.scoring-animation::after {
  background-image: conic-gradient(from var(--angle2), transparent, transparent, transparent, transparent, transparent, transparent, transparent, blue);
  animation: 1s spinAntiClockWise linear infinite;
}


.point-value {
    display: flex;
    align-items: center;
    flex-grow: 3;
    font-size: 7vh;
}

.point-percentage {
    display: flex;
    align-items: center;
    flex-grow: 1;
    font-size: 2vh;
}